Id: 1
Execution stack: 
(int  v;(v=0;(Repeat{ 
(fork( (Print( v );v=v - 1));v=v + 1)
}untilv == 3;(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 ))))))))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
int  v
(v=0;(Repeat{ 
(fork( (Print( v );v=v - 1));v=v + 1)
}untilv == 3;(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
int  v
(v=0;(Repeat{ 
(fork( (Print( v );v=v - 1));v=v + 1)
}untilv == 3;(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(v=0;(Repeat{ 
(fork( (Print( v );v=v - 1));v=v + 1)
}untilv == 3;(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(v=0;(Repeat{ 
(fork( (Print( v );v=v - 1));v=v + 1)
}untilv == 3;(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v=0
(Repeat{ 
(fork( (Print( v );v=v - 1));v=v + 1)
}untilv == 3;(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 ))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v=0
(Repeat{ 
(fork( (Print( v );v=v - 1));v=v + 1)
}untilv == 3;(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 ))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(Repeat{ 
(fork( (Print( v );v=v - 1));v=v + 1)
}untilv == 3;(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 ))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(Repeat{ 
(fork( (Print( v );v=v - 1));v=v + 1)
}untilv == 3;(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 ))))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
Repeat{ 
(fork( (Print( v );v=v - 1));v=v + 1)
}untilv == 3
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
Repeat{ 
(fork( (Print( v );v=v - 1));v=v + 1)
}untilv == 3
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
((fork( (Print( v );v=v - 1));v=v + 1);while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)})
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
((fork( (Print( v );v=v - 1));v=v + 1);while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)})
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(fork( (Print( v );v=v - 1));v=v + 1)
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(fork( (Print( v );v=v - 1));v=v + 1)
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
fork( (Print( v );v=v - 1))
v=v + 1
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
fork( (Print( v );v=v - 1))
v=v + 1
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v=v + 1
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 2
Execution stack: 
(Print( v );v=v - 1)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v=v + 1
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 2
Execution stack: 
(Print( v );v=v - 1)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 1
Output list: 
File table:
Heap memory:

Id: 2
Execution stack: 
Print( v )
v=v - 1
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 1
Output list: 
File table:
Heap memory:

Id: 2
Execution stack: 
Print( v )
v=v - 1
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(fork( (Print( v );v=v - 1));v=v + 1)
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 2
Execution stack: 
v=v - 1
Symbol table: 
v -> 0
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
(fork( (Print( v );v=v - 1));v=v + 1)
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 2
Execution stack: 
v=v - 1
Symbol table: 
v -> 0
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
fork( (Print( v );v=v - 1))
v=v + 1
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 2
Execution stack: 
Symbol table: 
v -> -1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
fork( (Print( v );v=v - 1))
v=v + 1
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
v=v + 1
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 3
Execution stack: 
(Print( v );v=v - 1)
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
v=v + 1
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 3
Execution stack: 
(Print( v );v=v - 1)
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 2
Output list: 
0
File table:
Heap memory:

Id: 3
Execution stack: 
Print( v )
v=v - 1
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 2
Output list: 
0
File table:
Heap memory:

Id: 3
Execution stack: 
Print( v )
v=v - 1
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
(fork( (Print( v );v=v - 1));v=v + 1)
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 3
Execution stack: 
v=v - 1
Symbol table: 
v -> 1
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
(fork( (Print( v );v=v - 1));v=v + 1)
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 3
Execution stack: 
v=v - 1
Symbol table: 
v -> 1
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
fork( (Print( v );v=v - 1))
v=v + 1
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 3
Execution stack: 
Symbol table: 
v -> 0
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
fork( (Print( v );v=v - 1))
v=v + 1
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
v=v + 1
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 4
Execution stack: 
(Print( v );v=v - 1)
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
v=v + 1
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 4
Execution stack: 
(Print( v );v=v - 1)
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 3
Output list: 
0
1
File table:
Heap memory:

Id: 4
Execution stack: 
Print( v )
v=v - 1
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
while(!v == 3){(fork( (Print( v );v=v - 1));v=v + 1)}
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 3
Output list: 
0
1
File table:
Heap memory:

Id: 4
Execution stack: 
Print( v )
v=v - 1
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 4
Execution stack: 
v=v - 1
Symbol table: 
v -> 2
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(int  x;(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))))
Symbol table: 
v -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 4
Execution stack: 
v=v - 1
Symbol table: 
v -> 2
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
int  x
(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 ))))))
Symbol table: 
v -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 4
Execution stack: 
Symbol table: 
v -> 1
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
int  x
(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 ))))))
Symbol table: 
v -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 ))))))
Symbol table: 
v -> 3
x -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(int  y;(x=1;( nop ;(y=3;( nop ;Print( v * 10 ))))))
Symbol table: 
v -> 3
x -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
int  y
(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))
Symbol table: 
v -> 3
x -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
int  y
(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))
Symbol table: 
v -> 3
x -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))
Symbol table: 
v -> 3
x -> 0
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(x=1;( nop ;(y=3;( nop ;Print( v * 10 )))))
Symbol table: 
v -> 3
x -> 0
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
x=1
( nop ;(y=3;( nop ;Print( v * 10 ))))
Symbol table: 
v -> 3
x -> 0
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
x=1
( nop ;(y=3;( nop ;Print( v * 10 ))))
Symbol table: 
v -> 3
x -> 0
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
( nop ;(y=3;( nop ;Print( v * 10 ))))
Symbol table: 
v -> 3
x -> 1
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
( nop ;(y=3;( nop ;Print( v * 10 ))))
Symbol table: 
v -> 3
x -> 1
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
 nop 
(y=3;( nop ;Print( v * 10 )))
Symbol table: 
v -> 3
x -> 1
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
 nop 
(y=3;( nop ;Print( v * 10 )))
Symbol table: 
v -> 3
x -> 1
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(y=3;( nop ;Print( v * 10 )))
Symbol table: 
v -> 3
x -> 1
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
(y=3;( nop ;Print( v * 10 )))
Symbol table: 
v -> 3
x -> 1
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
y=3
( nop ;Print( v * 10 ))
Symbol table: 
v -> 3
x -> 1
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
y=3
( nop ;Print( v * 10 ))
Symbol table: 
v -> 3
x -> 1
y -> 0
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
( nop ;Print( v * 10 ))
Symbol table: 
v -> 3
x -> 1
y -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
( nop ;Print( v * 10 ))
Symbol table: 
v -> 3
x -> 1
y -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
 nop 
Print( v * 10 )
Symbol table: 
v -> 3
x -> 1
y -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
 nop 
Print( v * 10 )
Symbol table: 
v -> 3
x -> 1
y -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
Print( v * 10 )
Symbol table: 
v -> 3
x -> 1
y -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
Print( v * 10 )
Symbol table: 
v -> 3
x -> 1
y -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
Symbol table: 
v -> 3
x -> 1
y -> 3
Output list: 
0
1
2
30
File table:
Heap memory:

